const alphabet = ['A','B','C','E','D','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','0','1','2','3','4','5','6','7','8','9','+','/']
  document.getElementById('filepicker').style.visibility = 'hidden';
document.getElementById('functionpicker').style.visibility = 'hidden';
var tabfiles = [];
const pi = 3.14159;
const e = 2.71828;
var global;
var global3;
var tabs = [];
var picking = true;
  let global2;
let filehandle;
var c = document.getElementById("inwave");
var ctx = c.getContext("2d");
ctx.fillStyle = "rgba(0, 0, 0, 0)";
ctx.strokeStyle = "#FFF";
var c2 = document.getElementById("outwave");
var ctx2 = c2.getContext("2d");
ctx2.fillStyle = "rgba(0, 0, 0, 0)";
ctx2.strokeStyle = "#FFF";
var arr = [
    0,
    -0.27941549819892586,
    -0.5365729180004349,
    -0.7509872467716737,
    -0.9055783620066238,
    -0.9880316240928618,
    -0.9917788534431158,
    -0.9165215479156338,
    -0.7682546613236623,
    -0.5587890488516103,
    -0.3048106211022099,
    -0.02655115402395259,
    0.25382336276203626,
    0.5139784559875352,
    0.7331903200732826,
    0.8939966636005515,
    0.9835877454343422,
    0.9948267913584092,
    0.9268185054177956,
    0.7849803886813281,
    0.5806111842123374,
    0.3299908256738089,
    0.053083587146086623,
    -0.22805225950080585,
    -0.4910215938984198,
    -0.7148764296291249,
    -0.8817846188147543,
    -0.9784503507933678,
    -0.9971732887740841,
    -0.9364619742512432,
    -0.8011526357338815,
    -0.6020239375553513,
    -0.354938357651926,
    -0.07957859166436852,
    0.20212035931267988,
    0.4677185183426585,
    0.6960584883448299,
    0.868950838216293,
    0.9726230624855979,
    0.9988166912028138,
    0.9454451549211538,
    0.8167599996228577,
    0.6230122110036975,
    0.37963562682935575,
    0.10601748626711377,
    -0.1760459464712114,
    -0.4440856600409099,
    -0.6767497645264253,
    -0.8555043707508502,
    -0.966109989262559,
    -0.999755839901147,
    -0.9537617134939645,
    -0.8317914757821099,
    -0.6435612059761313,
    -0.4040652194562047,
    -0.13238162920522656,
    0.149847405733703,
    0.42013968223951315,
    0.656963872524554,
    0.8414546973621062,
    0.9589157234144032,
    0.9999900726865644,
    0.9614057860635545,
    0.8462364656973325,
    0.6636564336216619,
    0.4282099105183576,
    0.1586524314362586,
    -0.12354320937849769,
    -0.3958974689616274,
    -0.6367147631355263,
    -0.8268117243070889,
    -0.9510453375321333,
    -0.9995192244043241,
    -0.9683719828855695,
    -0.860084784378488,
    -0.683283725035067,
    -0.45205267588236153,
    -0.1848113697310387,
    0.09715190418056514,
    0.3713761131024557,
    0.6160167137647456,
    0.811585776171402,
    0.9425043809309194,
    0.9983436270439312,
    0.974655392177743,
    0.8733266675413224,
    0.7024292412473373,
    0.47557670429881527,
    0.2108399997343223,
    -0.07069209833428057,
    -0.34659290437740636,
    -0.5948843183598852,
    -0.7957875885893241,
    -0.9332988757373445,
    -0.9964641095050567,
    -0.9802515835831996,
    -0.8859527784920025,
    -0.7210794829835314,
    -0.49876540925598767,
    -0.23671996896968622,
    0.04418244833300895,
    0.3215653171313266,
    0.5733324771206876,
    0.7794283006744359,
    0.9234353126432739,
    0.9938819970130894,
    0.9851566112941188,
    0.8979542147104149,
    0.7392213001807076,
    0.5216024406747177,
    0.26243302977964084,
    -0.01764164581463416,
    -0.2963109980173924,
    -0.5513763859932836,
    -0.7625194471654356,
    -0.9129206463293462,
    -0.9905991101847359,
    -0.9893670168339881,
    -0.9093225141270642,
    -0.7568419012600414,
    -0.5440716964366598,
    -0.2879610521918356,
    -0.008911595617691854,
    0.27084775355444235,
    0.5290315259555314,
    0.7450729502931639,
    0.9017622905613107,
    0.986617763744325,
    0.9928798314961389,
    0.9200496610896861,
    0.7739288621459731,
    0.5661573337376951,
    0.31328603670228616,
    0.03545855359028734,
    -0.24519353757240928,
    -0.5063136521016087,
    -0.7271011113743814,
    -0.8899681129626703,
    -0.9819407648917235,
    -0.9956925784368509,
    -0.9301280920149613,
    -0.7904701350262758,
    -0.5878437802585044,
    -0.33839012696661,
    -0.06198051015974955,
    0.21936643855285776,
    0.48323878253328423,
    0.7086166021382571,
    0.8775464294673131,
    0.9765714113230378,
    0.9978032744218198,
    0.9395507007215074,
    0.8064540568468241,
    0.609115745144424,
    0.36325562239032166,
    0.08845876501120731,
    -0.19338466687511915,
    -0.45982318706574477,
    -0.6896324557916829,
    -0.8645059984560473,
    -0.970513488905352,
    -0.999210431224493,
    -0.9483108434403987,
    -0.8218693575352032,
    -0.6299582297870217,
    -0.387864990609625,
    -0.11487464864357332,
    0.16726654197569796,
    0.4360833757552267,
    0.6701620578291247,
    0.8508560145806933,
    0.9637712690071939,
    0.9999130566754152,
    0.9564023434998268,
    0.8367051679472027,
    0.6503565383995898,
    0.4122008798531523,
    0.1412095355325061,
    -0.14103047943290434,
    -0.4120360872597918,
    -0.6502191365961547,
    -0.8366061022822503,
    -0.9563495054876056,
    -0.9999106553616897,
    -0.963819495679233,
    -0.8509510275293939,
    -0.6702962883774104,
    -0.43624613117483985,
    -0.16744485726293912,
    0.11469497798204223,
    0.3876982770359131,
    0.6298177536088091,
    0.8217663090040771,
    0.9482534313434834,
    0.9992032289764451,
    0.970557070233158,
    0.8645968916961764,
    0.6897634204408729,
    0.4599837905550091,
    0.19356211562257716,
    -0.08827860647082021,
    -0.36308710538316485,
    -0.6089722936387899,
    -0.8063470981072761,
    -0.9394887550200988,
    -0.9977912763175962,
    -0.976610316578181,
    -0.8776331389115574,
    -0.7087442085471204,
    -0.4833971208532844,
    -0.21954289564442087,
    0.06179999076757347,
    0.33821992534500284,
    0.5876974545709961,
    0.7903593414934588,
    0.9300616563861416,
    0.9956757929361116,
    0.9819749666425355,
    0.8900505774731823,
    0.727225269569119,
    0.5064696136098554,
    0.24536887859005152,
    -0.03527780062827428,
    -0.3131142704733407,
    -0.5660082370409538,
    -0.773814311939037,
    -0.9199787823762791,
    -0.99285827043408,
    -0.9866472378754755,
    -0.9018404519933926,
    -0.7451935727312703,
    -0.5291850006853956,
    -0.2710218548672897,
    0.00873073653270979,
    0.2877878424658512,
    0.5439199338569529,
    0.7567236751469237,
    0.9092472423048329,
    0.9893406954129973,
    0.9906238359143072,
    0.9129944495721466,
    0.762636448797424,
    0.5515272657317226,
    0.29648373686867024,
    0.01782248350100307,
    -0.2622584986844918,
    -0.5214481192179966,
    -0.7390994815211843,
    -0.8978746028525683,
    -0.9851255480730368,
    -0.9939019569072051,
    -0.923504705658952,
    -0.7795415990038057,
    -0.5734806554839719,
    -0.3217365717250219,
    -0.044363137114268855,
    0.23654423956536694,
    0.49860863773243846,
    0.7209541576702834,
    0.885868882731857,
    0.9802158004642898,
    0.9964792894901924,
    0.9333638095976573,
    0.7958971037307282,
    0.5950296908691842,
    0.34676255396382066,
    0.07087251080892523,
    -0.2106631959255246,
    -0.47541759324613836,
    -0.7023004976458571,
    -0.8732385470326963,
    -0.9746149143912093,
    -0.9983540164167753,
    -0.9425648098517205,
    -0.8116914309071058,
    -0.6161591779196467,
    -0.3715440380636163,
    -0.09733191314213352,
    0.18463361618000568,
    0.45189133748783294,
    0.683151653920848,
    0.8599925012540743,
    0.9683268389717317,
    0.9995248158393936,
    0.9511012189056547,
    0.8269134441410443,
    0.636854218486171,
    0.39606355089567885,
    0.12372268790458629,
    -0.15847385347488685,
    -0.4280464585395212,
    -0.6635211281164698,
    -0.846140085024809,
    -0.9613560078527393,
    -0.9999908622413448,
    -0.958967017839298,
    -0.841552410572789,
    -0.6571002207426001,
    -0.42030380404409323,
    -0.15002622727613726,
    0.13220235274669617,
    0.4038997691412254,
    0.6434227614822233,
    0.8316910655182874,
    0.9537073360841932,
    0.9997518270188722,
    0.9661566605717409,
    0.8555980084417905,
    0.6768829094743316,
    0.4442477059958187,
    0.17622398494504657,
    -0.10583763771710841,
    -0.37946829483530337,
    -0.6228707251365954,
    -0.8166556305657489,
    -0.9453862166532314,
    -0.998807878712859,
    -0.972665077771561,
    -0.8690403343645927,
    -0.6961883361436008,
    -0.46787837419089334,
    -0.20229748918499052,
    0.07939829783186333,
    0.3547692619627559,
    0.6018795100751729,
    0.8010443814728293,
    0.9363985166818719,
    0.9971596828899918,
    0.9784876804315179,
    0.88186991031759,
    0.715002888724428,
    0.4911791469273556,
    0.2282283558792556,
    -0.052902975154475326,
    -0.3298200855169365,
    -0.580463916953215,
    -0.784868325545248,
    -0.9267505732901172,
    -0.9948084016734547,
    -0.9836203631039552,
    -0.8940776903198687,
    -0.7333133013004506,
    -0.514133595108194,
    -0.2539983014833796,
    0.026370351220578677,
    0.3046383568644473,
    0.5586390456498871,
    0.7681388683270306,
    0.9164491891276365,
    0.9917556929236171,
    0.988059506795567,
    0.9056550668114206,
    0.7511066634177892,
    0.5367255338266804,
    0.27958915591577954,
    0.0001808661332953912,
    -0.2792418313416764,
    -0.5364202846215166,
    -0.7508678055582482,
    -0.9055016275776562,
    -0.9880037090689741,
    -0.9918019815191071,
    -0.9165938767222301,
    -0.7683704291896009,
    -0.5589390337754345,
    -0.3049828753705833,
    -0.026731955960617084,
    0.25364841573572194,
    0.5138233000513758,
    0.7330673148599017,
    0.8939156076351064,
    0.9835550955885707,
    0.9948451485003057,
    0.9268864072279582,
    0.7850924261404875,
    0.5807584324810983,
    0.3301615550392176,
    0.05326419740477406,
    -0.22787615565853042,
    -0.4908640248036432,
    -0.7147499471452845,
    -0.8816992984643965,
    -0.9784129891466881,
    -0.9971868620384372,
    -0.9365254011881625,
    -0.801260863790209,
    -0.6021683453460076,
    -0.3551074417350966,
    -0.07975888289892405,
    0.20194322282315083,
    0.46755864718892903,
    0.6959286177717973,
    0.86886131363935,
    0.9725810153812194,
    0.9988254710192289,
    0.9455040622632204,
    0.8168643419657571,
    0.6231536764960787,
    0.37980294641118156,
    0.10619733135647696,
    -0.1758679022310768,
    -0.4439235995516926,
    -0.6766165974341928,
    -0.8554107050698758,
    -0.966063286347276,
    -0.9997598200790414,
    -0.9538160597063471,
    -0.8318918588411428,
    -0.643699629424728,
    -0.4042306565618083,
    -0.13256090134290618,
    0.14966857927971003,
    0.4199755466815979,
    0.6568275028075676,
    0.8413569566195748,
    0.9588643976178257,
    0.9999892504195017,
    0.9614555328274546,
    0.8463328186935353,
    0.6637917174257135,
    0.42837334850003683,
    0.15883100421960158,
    -0.12336372679858487,
    -0.39573137406495995,
    -0.6365752869464067,
    -0.8267099774187807,
    -0.95098942504341,
    -0.9995136002720146,
    -0.9684170951249428,
    -0.8601770393744617,
    -0.6834157738075374,
    -0.452213999501868,
    -0.1849891172504968,
    0.09697189202620005,
    0.37120817597859335,
    0.615874229446451,
    0.8114800948777509,
    0.9424439211732216,
    0.9983332050118233,
    0.9746958380844423,
    0.8734147594891182,
    0.7025579618822119,
    0.47573579980876246,
    0.21101679666222936,
    -0.07051168352987934,
    -0.34642324343684217,
    -0.5947389263763252,
    -0.795678047404932,
    -0.933233911340069,
    -0.9964488969215023,
    -0.9802873346392142,
    -0.8860366452790128,
    -0.7212047847213426,
    -0.4989221644800014,
    -0.23689569064906713,
    0.044001758086893085,
    0.3213940519998915,
    0.5731842799860238,
    0.7793149768354368,
    0.9233658894119856,
    0.9938620046042658,
    0.9851876422917594,
    0.898033797203088,
    0.7393430946726519,
    0.5217567450865298,
    0.2626075523107774,
    -0.017460807529337406,
    -0.296138249451959,
    -0.5512254881995127,
    -0.7624024205750691,
    -0.9128468132134814,
    -0.9905743520469917,
    -0.9893933058936255,
    -0.9093977562126796,
    -0.7569601026302311,
    -0.5442234412380392,
    -0.2881342525209579,
    -0.009092454435253475,
    0.27067364335805244,
    0.5288780338988538,
    0.7449523034654365,
    0.9016840996194667,
    0.986588257334268,
    0.9929013600815917,
    0.9201205097158923,
    0.7740433870519868,
    0.5663064119355352,
    0.3134577927078915,
    0.03563930541871915,
    -0.24501818850806847,
    -0.5061576740074102,
    -0.7269769293758866,
    -0.8898856193264782,
    -0.981906531013912,
    -0.9957093313685104,
    -0.930194497227182,
    -0.7905809027179223,
    -0.5879900867391311,
    -0.33856031754556937,
    -0.0621610275532055,
    0.2191899742570841,
    0.4830804283798271,
    0.7084889725281963,
    0.8774596913019979,
    0.9765324741152865,
    0.9978152398873338,
    0.9396126156981635,
    0.8065609892230778,
    0.609259176748848,
    0.3634241275432682,
    0.08863892068890998,
    -0.1932072117707687,
    -0.4596625685066239,
    -0.6895014685597991,
    -0.8644150769196012,
    -0.9704698758217842,
    -0.9992176007870942,
    -0.9483682245258862,
    -0.8219723791994026,
    -0.630098685383117,
    -0.3880316915252498,
    -0.11505431557933406,
    0.16708822118490807,
    0.43592060604135996,
    0.670027805333822,
    0.8507609737812325,
    0.9637230107991189,
    0.9999154252798552,
    0.9564551502350435,
    0.8368042062591949,
    0.6504939189530703,
    0.4123656589917839,
    0.14138858704474622,
    -0.1408514186880955,
    -0.411871281158465,
    -0.6500817134975125,
    -0.836507009232085,
    -0.9562966361813102,
    -0.9999082213378938,
    -0.9638676908308161,
    -0.8510460126584471,
    -0.6704304970228872,
    -0.4364088723527787,
    -0.1676231671045739,
    0.11451530353669685,
    0.38753155074952245,
    0.6296772568022146,
    0.8216632335724746,
    0.9481959882164845,
    0.9991959940406235,
    0.9706006198193907,
    0.8646877566694093,
    0.6898943625492667,
    0.46014437902539257,
    0.193739558069465,
    -0.08809844501124571,
    -0.36291857646883985,
    -0.6088288221868647,
    -0.8062401129714935,
    -0.9394267785748599,
    -0.9977792455710129,
    -0.9766491898926487,
    -0.8777198196611617,
    -0.708871791792882,
    -0.4835554433870982,
    -0.21971934558378794,
    0.061619469323465195,
    0.33804971263047,
    0.5875511096339332,
    0.7902485220874385,
    0.9299951903215147,
    0.9956589748615023,
    0.9820091362761278,
    0.890133012881596,
    0.7273494039948241,
    0.5066255585757703,
    0.2455442116093742,
    -0.0350970464826939,
    -0.31294249397355384,
    -0.5658591218046414,
    -0.7736997364002199,
    -0.9199078735567823,
    -0.9928366768896143,
    -0.9866766797355916,
    -0.9019185839362945,
    -0.7453141708112165,
    -0.5293384581284768,
    -0.2711959473413482,
    0.008549877133702368,
    0.28761462329837073,
    0.543768153460765,
    0.7566054242611551,
    0.9091719407273452,
    0.989314341624068,
    0.990648529241843,
    0.9130682229597398,
    0.7627534254993444,
    0.5516781274507685,
    0.29665646604693857,
    0.018003320631633433,
    -0.26208395898430503,
    -0.5212937806804793,
    -0.7389776386657527,
    -0.8977949616113333,
    -0.9850944526213857,
    -0.9939218842911897,
    -0.9235740684745012,
    -0.7796548718488235,
    -0.5736288151083774,
    -0.3219078158186481,
    -0.04454382447041922,
    0.23636850239811608,
    0.4984518498758529,
    0.7208288087552897,
    0.8857849579807529,
    0.9801799852749492,
    0.9964944368800462,
    0.9334287129342689,
    0.7960065928515121,
    0.5951750439333663,
    0.34693219223020344,
    0.07105292099009686,
    -0.2104863852013892,
    -0.4752584666197313,
    -0.7021717310531724,
    -0.8731503979462636,
    -0.9745744047170416,
    -0.9983643731322797,
    -0.9426252079468262,
    -0.8117970591040504,
    -0.6163016219368942,
    -0.3717119508928382,
    -0.09751191894303414,
    0.18445585656611754,
    0.45172998428988986,
    0.6830195604422603,
    0.859900189985182,
    0.9682816633756248,
    0.9995303745781517,
    0.9511570691732785,
    0.8270151369371059,
    0.636993653020907,
    0.39622961989357264,
    0.1239021624041467,
    -0.15829527030922463,
    -0.42788299254010626,
    -0.6633858008912161,
    -0.8460436766627284,
    -0.9613061981885319,
    -0.9999916190839416,
    -0.959018280898923,
    -0.841650096263135,
    -0.657236547477428,
    -0.4204679121141085,
    -0.15020504392589132,
    0.1320230719488389,
    0.40373430560101486,
    0.6432842959297361,
    0.8315906280403049,
    0.9536529274724876,
    0.9997477814318909,
    0.9662033002784279,
    0.8556916181496095,
    0.6770160322874067,
    0.44440973742680395,
    0.1764020176635445,
    -0.10565778569583925,
    -0.3793009504203515,
    -0.6227292188877946,
    -0.8165512347893324,
    -0.9453272474571209,
    -0.9987990335490379,
    -0.9727070612404017,
    -0.8691298020870033,
    -0.6963181611717795,
    -0.4680382147371463,
    -0.20247461244308423,
    0.07921800139894852,
    0.35460015466570444,
    0.6017350629042284,
    0.8009361010068008,
    0.9363350284800612,
    0.9971460443861915,
    0.9785249780608216,
    0.8819551729721785,
    0.7151293244294823,
    0.49133668388732743,
    0.22840444479038857,
    -0.05272236143502547,
    -0.32964933457340834,
    -0.5803166307086189,
    -0.7847562367366716,
    -0.926682610847606,
    -0.994789979446332,
    -0.9836529485958447,
    -0.894158687789168,
    -0.7334362585344182,
    -0.5142887174047678,
    -0.2541732318878721,
    0.026189547562731553,
    0.3044660826689748,
    0.5584890241811901,
    0.7680230502084318,
    0.9163768003642467,
    0.9917324999626529,
    0.9880873571746384,
    0.9057317419849118,
    0.7512260554854779,
    0.5368781320845183,
    0.27976280447345897,
    0.0003617322470317688,
    -0.2790681553628126,
    -0.5362676337072008,
    -0.7507483397922269,
    -0.905424863534363,
    -0.9879757617274882,
    -0.991825077148629,
    -0.9166661755377894,
    -0.768486171909115,
    -0.5590890003998454,
    -0.3051551196439912,
    -0.026912757003704223,
    0.25347346043127433,
    0.5136681273239089,
    0.7329442856802342,
    0.8938345224371754,
    0.9835224135721385,
    0.9948634730960648,
    0.9269542787087748,
    0.7852044379032024,
    0.5809056617317996,
    0.3303322735810459,
    0.053444805896560414,
    -0.22770004438658434,
    -0.49070643967358774,
    -0.7146234412985542,
    -0.8816139492842491,
    -0.978375595499247,
    -0.9972004026801521,
    -0.936588797479089,
    -0.8013690656178848,
    -0.6023127334143058,
    -0.35527651417381834,
    -0.0799391714945301,
    0.20176607975771765,
    0.46739876076820025,
    0.695798724456593,
    0.8687717606558875,
    0.9725389364688204,
    0.9988342181598874,
    0.9455629386645146,
    0.8169686575670514,
    0.6232951215758151,
    0.37997025353592345,
    0.10637717293568025,
    -0.17568985227366685,
    -0.4437615245740146,
    -0.676483408236273,
    -0.855317011426048,
    -0.9660165518394928,
    -0.9997637675513802,
    -0.9538703747051893,
    -0.8319922146640626,
    -0.6438380317848155,
    -0.40439608040640485,
    -0.13274016910248748,
    0.14948974797126613,
    0.4198113974242106,
    0.6566911116372098,
    0.8412591883778584,
    0.9588130404670938,
    0.9999883954404467,
    0.9615052481270927,
    0.846429143979113,
    0.6639269794804548,
    0.42853677242620686,
    0.15900957176003477,
    -0.12318424023141604,
    -0.39556526626848265,
    -0.6364357899715561,
    -0.8266082035145996,
    -0.9509334814610398,
    -0.9995079434446428,
    -0.968462175672081,
    -0.860269266205092,
    -0.6835478001854319,
    -0.45237530828064354,
    -0.1851668586659783,
    0.09679187675372315,
    0.37104022676292137,
    0.6157317250249137,
    0.8113743870708701,
    0.9423834306045953,
    0.9983227503249374,
    0.9747362520933555,
    0.8735028228369711,
    0.7026866594932013,
    0.4758948797041795,
    0.21119358662945278,
    -0.07033126647873833,
    -0.34625357122105294,
    -0.5945935149864171,
    -0.7955684802294116,
    -0.9331689164365922,
    -0.9964336517468567,
    -0.980323053614929,
    -0.8861204830518836,
    -0.7213300628224468,
    -0.4990789033268388,
    -0.23707140451514533,
    0.04382106646792347,
    0.3212227764179234,
    0.5730360641557244,
    0.7792016275454455,
    0.9232964360010146,
    0.9938419796912655,
    0.9852186410494889,
    0.8981133502881773,
    0.7394648649313385,
    0.5219110323702175,
    0.26278206618246197,
    -0.01727996874514693,
    -0.2959654912682586,
    -0.5510745724341737,
    -0.7622853690920268,
    -0.9127729502660104,
    -0.9905495615153288,
    -0.9894195625767535,
    -0.9094729685182734,
    -0.7570782791885522,
    -0.5443751681725806,
    -0.28830744335066366,
    -0.009273312877391793,
    0.2704995243824252,
    0.5287245246082855,
    0.7448316323211313,
    0.9016058792157956,
    0.986558718663589,
    0.9929228561770831,
    0.920191328210911,
    0.7741578865852441,
    0.5664554715398358,
    0.31362953838003715,
    0.03582005599767812,
    -0.2448428315097916,
    -0.5060016794285503,
    -0.7268527236542821,
    -0.8898030966189124,
    -0.9818722650318192,
    -0.9957260517199645,
    -0.9302608719782381,
    -0.7906916444940482,
    -0.588136373913561,
    -0.33873049696527746,
    -0.06234154282391738,
    0.2190135028783438,
    0.4829220585027141,
    0.7083613198054404,
    0.8773729244769649,
    0.9764935049825523,
    0.9978271727056708,
    0.939674499905793,
    0.8066678951595584,
    0.6094025883482082,
    0.3635926207191424,
    0.08881907337222647,
    -0.1930297504403736,
    -0.4595019349960848,
    -0.6893704588428037,
    -0.8643241271551508,
    -0.9704262310153148,
    -0.9992247376588673,
    -0.9484255745564997,
    -0.8220753739180733,
    -0.6302391202890407,
    -0.3881983796548501,
    -0.1152339786517693,
    0.16690989502788386,
    0.43575782215827735,
    0.6698935309958209,
    0.8506659052051673,
    0.9636747210925808,
    0.9999177611731709,
    0.9565079256520476,
    0.8369032171401762,
    0.6506312781474548,
    0.41253042454539296,
    0.14156763382803952,
    -0.14067235344012788,
    -0.4117064616799176,
    -0.6499442692145921,
    -0.8364078888763288,
    -0.956243735623432,
    -0.9999057546060187,
    -0.9639158544231251,
    -0.8511409698905502,
    -0.6705646836555605,
    -0.43657159915627036,
    -0.16780147135411244,
    0.11433562545458945,
    0.3873648118882765,
    0.6295367394841803,
    0.8215601313258095,
    0.9481385141070493,
    0.9991887264230624,
    0.9706441376275536,
    0.864778593299172,
    0.6900252820069974,
    0.46030495234214486,
    0.19391699406599094,
    -0.08791828078389777,
    -0.3627500357901559,
    -0.6086853309109529,
    -0.8061331015302816,
    -0.9393647714387172,
    -0.9977671821923175,
    -0.9766880312331339,
    -0.8778064716414463,
    -0.7089993517660892,
    -0.4837137499988927,
    -0.21989578821934425,
    0.061438945982544804,
    0.3378794889713131,
    0.5874047455742771,
    0.7901376769043649,
    0.929928693879094,
    0.995642124227658,
    0.9820432737626054,
    0.8902154191153371,
    0.7274735145426641,
    0.5067814868618368,
    0.24571953647641706,
    -0.03491629131352393,
    -0.31277070735582885,
    -0.565709988160935,
    -0.7735851356310913,
    -0.9198369346941564,
    -0.9928150508820965,
    -0.9867060892982166,
    -0.9019966863200551,
    -0.7454347444249987,
    -0.52949189814656,
    -0.2713700308204653,
    0.008369017584150262,
    0.28744139484684744,
    0.5436163553854974,
    0.7564871487103879,
    0.9090966094628816,
    0.989287955491314,
    0.9906731901446935,
    0.9131419664246789,
    0.7628703771642323,
    0.5518289710122701,
    0.2968291853940116,
    0.018184157038746054,
    -0.26190941084036695,
    -0.5211394252047933,
    -0.7388557717276326,
    -0.8977152910604274,
    -0.9850633249681819,
    -0.9939417791463966,
    -0.9236434010252021,
    -0.7797681191032088,
    -0.5737769558554358,
    -0.32207904925096753,
    -0.04472451023041342,
    0.23619275763363995,
    0.4982950458340784,
    0.7207034363569192,
    0.885701004318587,
    0.9801441380494506,
    0.9965095516602246,
    0.9334935856854005,
    0.796116055846883,
    0.5953203774138467,
    0.34710181901363146,
    0.07123332870361011,
    -0.2103095677319684,
    -0.4750993245734477,
    -0.7020429415933076,
    -0.873062220367577,
    -0.9745338631947792,
    -0.9983746971804189,
    -0.9426855751576113,
    -0.8119026606595476,
    -0.6164440456780377,
    -0.3718798514247936,
    -0.0976919214067576,
    0.1842780910636906,
    0.45156861644758123,
    0.682887444728982,
    0.859807850663144,
    0.9682364561421776,
    0.99953590061513,
    0.951212888279464,
    0.8271168025945288,
    0.6371330666015819,
    0.39639567579117146,
    0.12408163270186842,
    -0.1581166821123746,
    -0.42771951267877756
]
function draw(x,y,canv){
  if(canv){
  y+=75;
ctx.moveTo(x, y);
ctx.lineTo(x+1, y);
ctx.lineTo(x+1, y+1);
ctx.lineTo(x, y+1);
ctx.stroke();
  }
  if(!canv){
      y+=75;
    ctx2.moveTo(x, y);
ctx2.lineTo(x+1, y);
ctx2.lineTo(x+1, y+1);
ctx2.lineTo(x, y+1);
ctx2.stroke();
  }
}
function integral(wave){
  var i = 0;
  var output = 0;
  while(i<wave.length){
    if(i != wave.length-1){
        output += (((wave[i+1]-wave[i]))+((wave[i+1]-wave[i])/2))/2;
    }
   output += (wave[i]);
       i++;
  }
  return(output);
}
function compare(wave, compare){
  var i = 0;
  // generates a wave array for the transformed signal
    var sum = 0;
  var res = []
while(i<2*(wave.length)){
sum += Math.floor(Math.sin(i*compare)*(wave[Math.floor((Math.floor((i % wave.length)*10)) % wave.length)])*10000)

  i += 0.1;
}
  sum /= 100;
  sum *= -0.1;
  return(Math.floor(sum));
}
function transform(wave){
  var wave = wave;
  var i = 0;
  var wave2 = [];
  while(i<1000){
  wave2.push(compare(wave,i));
    i += 1;
  }
  return wave2;
}
function file2wave(fil){
      var wave = [];
  const reader = new FileReader()
  reader.onload = function () {
          result = reader.result;
const out = new Int8Array(result.slice(404))
    global2 = ((Array.from(out)))
    }
      reader.readAsArrayBuffer(fil.files[0])
      return(global2)
}
function defaul(tab, type, value){
  console.log(tabs[tab][5][0])
if(type == 0){
  console.log(tabs[tab][5][0])
  if(tabs[tab][5][1] == value){
    return 'selected';
  }else{
    return '';
  }
}
  if(type == 1){
    return(tabs[tab][5][0])
  }
}
function hartley(wave){
  var i = 0;
  var i2 = 0;
  var wav = [];
  var output = [];
  while(i2<wave.length){
while(i<wave.length){
  wav.push((wave[i]*(Math.sin(i*i2) + Math.cos(i*i2))))
  i++;
}
    i = 0;
    output.push(integral(wav)/2);
    wav = [];
    i2++;
  }
  return output*(1/((2*pi)**0.5));
}
function gamma(z){
  var i = 0;
  var wave = [];
  while(i<z.length){
wave.push((Math.sqrt(2*pi))*(e**(-1*(z[i])))*(z[i]**(z[i]+0.5)))
    i++
  }
  return wave;
}
function zeta(wave){
  var i = 0;
  var i2 = 0;
  var output = [];
  var out = 0;
  while(i2<wave.length){
    while(i<1000){
      out += 1/((i+1)**wave[i2])
      
      i++;
    }
    i2++;
    output.push(out);
    out = 0;
    i=0;
  }
  return(output);
}
function mellin(wave){
    var i = 0;
  var i2 = 0;
  var wav = [];
  var output = [];
  while(i2<wave.length){
while(i<wave.length){
  wav.push((i**(i2-1))*wave[i])
  i++;
}
    i = 0;
   const integ = integral(wav);
    if(!!integ){
    output.push(integ);
    }
    wav = [];
    i2++;
  }
  return output;
}
function tan(wave){
  var i = 0;
  var output = [];
  while(i<wave.length){
    output.push(Math.ceil(Math.tan(wave[i])*20))
    i++
  }
  return output;
}
async function getFile(){
 [filehandle] = await window.showOpenFilePicker()
  let filedata = await filehandle.getFile(); 
await filedata.text().then(result => {
        return(result);
  })
}
const input = document.getElementById('fileInput');
input.addEventListener('change', function (e) {
  ctx.clearRect(0, 0, c.width, c.height);
global2 = (file2wave(input));
}, false)
document.getElementById('input').addEventListener('click', async function(){
  document.getElementById('input').innerHTML = "Cancel"
  if(picking == false){
    document.getElementById('input').innerHTML = "Set input"
    picking = true;
    document.getElementById('tab').style.backgroundColor = '#B6B6B6';
  }else{
    picking = false;
    document.getElementById('tab').style.backgroundColor = '#183985';
  }
// get tab which input is coming from

})
async function write(){
  const writable = await filehandle.createWritable();
  await writable.write(contents);
  await writable.close();
}
async function createTab(type){
  close();
  if(type == true){
        const link = document.getElementById('filepicker');
  link.style.visibility = 'visible';
        document.getElementById('name').textContent = 'myFile ' + (tabs.length + 1);
            document.getElementById('name2').textContent = 'myFile ' + (tabs.length + 1);
  }
  if(type == false){
            const link = document.getElementById('functionpicker');
  link.style.visibility = 'visible';
        document.getElementById('name').textContent = 'myFile ' + (tabs.length);
  }
}
function create(){
           const name = document.getElementById('name').value;
    console.log(global2)
   tabs.push([true,true,name,0,'',global2]);
  
let list = document.getElementById("files").innerHTML;
  list+="<li><button onclick = 'tab("+ (tabs.length - 1) +")' id ='tab'>"+name+"</button></li>";
    document.getElementById("files").innerHTML = list;
  console.log(tabs[0][2])
  const link = document.getElementById('filepicker');
  link.style.visibility = 'hidden';
  tab(tabs.length)
}
function create2(){
           const name = document.getElementById('name2').value;
    console.log(name)
   tabs.push([true,false,name,document.getElementById('functionType').value,'0',[1,0,0,0,0,0]]);
let list = document.getElementById("functions").innerHTML;
  list+="<li><button onclick = 'tab("+ (tabs.length - 1) +")' id ='tab'>"+name+"</button></li>";
    document.getElementById("functions").innerHTML = list;
  const link = document.getElementById('functionpicker');
  link.style.visibility = 'hidden';
}
function customWave(tab){
const freq = tabs[tab][5][0];
const type = tabs[tab][5][1];
const peak = 10;
var output =[];
if(type == 0){
  var i = 0;
  var i2 = 0;
  var up = true;
  while(i<1000){
if(i2>freq/2){
  up = false;
}else if(i2<0){
  up = true;
}
if(up){
  i2 += 1/freq;
  output.push(0);
}else if(!up){
  i2 -= 1/freq;
  output.push(peak);
  }
  i++
}
}
if(type == 1){
  var i = 0;
  var i2 = 0;
  var up = true;
  while(i<1000){
if(i2>freq/2){
  up = false;
}else if(i2<0){
  up = true;
}
if(up){
  i2 += 1/freq;
}else if(!up){
  i2 -= 1/freq;
  }
  output.push((i2/freq)*peak);
  i++
}
}
if(type == 2){
  var i = 0;
  var i2 = 0;
  while(i<1000){
if(i2>freq){
  i2 = 0;
}
output.push((i2/freq)*peak)
i ++;
i2 += 1/freq;
  }
}
if(type == 3){
  var i = 0;
  var i2 = 0;
  while(i<1000){
if(i2>freq){
  i2 = 0;
}
output.push(peak - ((i2/freq)*peak))
i ++;
i2 += 1/freq;
  }
  console.log('   gdsdsdds', output, type)
}
if(type == 4){
  var i = 0;
  var i2 = 0;
  while(i<1000){
    output.push(Math.sin(Math.PI * i2)*peak);
    i++;
    i2 += 1/freq;
  }  
}
if(type == 5){
  var i = 0;
  while(i<1000){
    output.push(i)
    i++;
  }

}
if(type == 6){
  var i = 0;
  var i2 = 0;
  var randint = Math.random() * peak;
  while(i<1000){
    if(i2 == freq){
      randint = Math.random() * peak;
    i2 = 0;
    }
    output.push(randint)
    i++;
    i2++;
  }
}
if(type == 7){
  var i = 0;
  var out = 0;
  while(i<1000){
out = Math.floor(Math.E**(i/freq));
if(out != 'Infinity'){
    output.push(out);
}else{
  break;
}
    i++;
  }
}
console.log('   gdsdsdds', output)
return output;
}
function close(){ 
  document.getElementById('filepicker').style.visibility = 'hidden';
document.getElementById('functionpicker').style.visibility = 'hidden';
}
function tab(numb){
  // decides if picking or using tab

  if(picking){
  ctx.fillRect(0, 0, 1040, 150);
    ctx2.fillRect(0, 0, 1040, 150);
  var i = 0;
  while(i<tabs.length){
    tabs[i][0] = false;
    i++;
  }
  tabs[numb][0] = true;
  global = numb;
  let tabdata = tabs[numb];
  if(tabdata[1]){
   let filedata = tabdata[5];
    console.log("tabdata", tabdata);
    const filer = document.getElementById("filer");
filer.innerHTML = String('<input type="range" min="1" max="' + filedata.length + '" value="50" id="WavePlace">');
   console.log('hello');
   if(true){
      var place;
    place += document.getElementById('WavePlace').value;
      var i = 0;
      while(i<1000){
        draw(i,tabs[global][5][Math.ceil(i+parseFloat(document.getElementById('WavePlace').value))],true)
        i+=1;
      }
    } document.getElementById('WavePlace').addEventListener("change", function() {
      var place;
    place += document.getElementById('WavePlace').value;
      var i = 0;
      while(i<1000){
        draw(i,tabs[global][5][Math.ceil(i+parseFloat(document.getElementById('WavePlace').value))],true)
        console.log(tabs[global][5][Math.ceil(i+parseFloat(document.getElementById('WavePlace').value))])
        i+=1;
      }
    })
    
}
  if(!tabdata[1]){
    console.log("hello1")
    if(true){
      if(!tabfiles[global]){
tabfiles[global] = ['']
      }
      let filedata = tabfiles[global];
    console.log("tabdata", tabdata);
    const filer = document.getElementById("filer");
      if(tabs[numb][3] == 5){
        console.log('tabfiles:', defaul(numb, 1, 0))
        filer.innerHTML = String('<input type="range" min="1" max="' + filedata.length + '" value="50" id="WavePlace"><select id="waveType" ><option value="0" ' + defaul(numb, 0, 0) + '>Square wave</option><option value="1" ' + defaul(numb, 0, 1) + '>Triangle wave</option><option value="2" ' + defaul(numb, 0, 2) + '>Rising edge sawtooth wave</option><option value="3" ' + defaul(numb, 0, 3) + '>Falling edge sawtooth wave</option><option value="4" ' + defaul(numb, 0, 4) + '>Sine wave</option><option value="5" ' + defaul(numb, 0, 5) + '>Straight line</option><option value="6" ' + defaul(numb, 0, 6) + '>Noise</option><option value="7" ' + defaul(numb, 0, 7) + '>Exponential function</option></select><input type="range" min="1" max="100" value="' + defaul(numb, 1, 0) + '" id="waveFreq">');
        console.log('type', tabs[numb][3])
        document.getElementById('waveFreq').addEventListener('change', function(){
          var i = 0;
          while(i<tabs.length){
            if(tabs[i][0]){
              
                tabs[i][5][0] = document.getElementById('waveFreq').value;
              break;
            }
            i++
          }
        })
        document.getElementById('waveType').addEventListener('change', function(){
          var output = [];
          var i = 0;
          var i = 0;
          while(i<tabs.length){
            if(tabs[i][0]){
              
                tabs[i][5][1] = document.getElementById('waveType').value;
              break;
            }
            i++
          }
          })
    }else{  
filer.innerHTML = String('<input type="range" min="1" max="' + filedata.length + '" value="50" id="WavePlace">');
      }
   console.log('hello');
   if(true){
      var place;
    place += document.getElementById('WavePlace').value;
      var i = 0;
      console.log('     dsdsdswdsdsds', tabfiles[global])
      while(i<1000){
        draw(i,tabfiles[global][Math.ceil(i+parseFloat(document.getElementById('WavePlace').value))],true)
        
        i+=1;
      }
    } document.getElementById('WavePlace').addEventListener("change", function() {
      var place;
    place += document.getElementById('WavePlace').value;
      var i = 0;
      while(i<1000){
        draw(i,tabs[global][5][Math.ceil(i+parseFloat(document.getElementById('WavePlace').value))])
        i+=1;
      }
    })
    
}
    if(true){
    console.log("tabdata", tabdata);
    const filer = document.getElementById("filer");
filer.innerHTML = String('<input type="range" min="1" max="' + tabfiles[tabs[global][4]].length + '" value="50" id="WavePlace">');
   console.log('hello');
   if(true){
      var place;
    place += document.getElementById('WavePlace').value;
      var i = 0;
      while(i<1000){
        draw(i,tabfiles[tabs[global][4]][Math.ceil(i+parseFloat(document.getElementById('WavePlace').value))],false)
        i+=1;
      }
    } document.getElementById('WavePlace').addEventListener("change", function() {
      var place;
    place += document.getElementById('WavePlace').value;
      var i = 0;
      while(i<1000){
        draw(i,tabfiles[global][Math.ceil(i+parseFloat(document.getElementById('WavePlace').value))])
        i+=1;
      }
    })
    
}
  }
  console.log(tabfiles)

}else{
  document.getElementById('tab').style.backgroundColor = '#B6B6B6';
  var i = 0;
  var opentab;
  // find the tab which is open
  while(i<tabs.length){
    if(tabs[i][0]){
      opentab = i;
      break;
    }
    i++
  }
  // process the data

  tabs[opentab][4] = numb;
  picking = true;
  document.getElementById('input').innerHTML = "Set input";
}
}
function process(){
  tabfiles = [];
  var i = 0;
  var files = [];
  while(i<tabs.length){
    if(tabs[i][1]){
      files.push(tabs[i]);
    }else{
      files.push([]);
    }
          i++;
  }
     i = 0;
  while(i<tabs.length){
if(tabs[i] == files[i]){
  tabfiles.push(files[i][5])
}else{
  tabfiles.push(['']);
}
          i++;
  }
  i = 0;
  var i2 = 0;
 while(i<tabs.length){
var file = tabfiles[tabs[i][4]];
   console.log("file", file, i)
   const doneFunction = tabs[i][3];
if(!tabs[i][1]){
   if(doneFunction == 1){
     tabfiles[i] = transform(file);
     
   }
      if(doneFunction == 0){
     tabfiles[i] = hartley(file);
   }
     if(doneFunction == 2){
     tabfiles[i] = gamma(file);
   }
       if(doneFunction == 3){
         console.log('mell', mellin(arr))
     tabfiles[i] = mellin(file);
   }
         if(doneFunction == 4){
     tabfiles[i] = zeta(file);
   }
   if(doneFunction == 5){
    tabfiles[i] = customWave(i);
  }
}
   i++
 }
  console.log(tabfiles)
}

function delet(){
  process();
}``